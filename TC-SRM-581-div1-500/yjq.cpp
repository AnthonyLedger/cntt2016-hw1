#include<bits/stdc++.h>
#define INF 1000000007 
using namespace std;const int MAXN=310;int disA[MAXN][MAXN],disB[MAXN][MAXN],cntA[10],cntB[10];class TreeUnion{public:vector<int>getInt(const vector<string>&vec){string str;for(int i=0;i<vec.size();i++)str+=vec[i];vector<int>ret;ret.push_back(0);for(int i=0,j=0;i<str.length();i++){if(str[i]==' ')ret.push_back(0),j++;else ret[j]=ret[j]*10+(str[i]-'0');}return ret;}double expectedCycles(vector<string>tree1,vector<string>tree2,int k){vector<int>edge1=getInt(tree1),edge2=getInt(tree2);int n=edge1.size()+1;for(int i=0;i<n;i++){for(int j=0;j<n;j++)disA[i][j]=disB[i][j]=INF;disA[i][i]=disB[i][i]=0;}for(int i=0;i+1<n;i++)disA[i+1][edge1[i]]=disA[edge1[i]][i+1]=disB[i+1][edge2[i]]=disB[edge2[i]][i+1]=1;for(int k=0;k<n;k++){for(int i=0;i<n;i++){for(int j=0;j<n;j++){disA[i][j]=min(disA[i][j],disA[i][k]+disA[k][j]);disB[i][j]=min(disB[i][j],disB[i][k]+disB[k][j]);}}}for(int i=0;i<n;i++){for(int j=0;j<n;j++){if(disA[i][j]<k)cntA[disA[i][j]]++;if(disB[i][j]<k)cntB[disB[i][j]]++;}}k-=2;double ans=0.0;for(int i=1;i<k;i++)ans+=(double)cntA[i]*cntB[k-i];return ans/2.0/n/(n-1);}};
