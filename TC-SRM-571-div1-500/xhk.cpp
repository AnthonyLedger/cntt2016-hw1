// BEGIN CUT HERE

// END CUT HERE
#line 6 "MagicMolecule.cpp"
#include<bits/stdc++.h>
using namespace std;

struct unit
{int d,num,val;
};
struct unit f[110];

int n,lim,ans;
int a[110],b[110],id[110];
long long g[110];

bool operator <(unit A,unit B)
{return A.d<B.d;
}

long long calc(long long x)
{return x==0?0:calc(x-(x&(-x)))+1;
}

void dfs(int i,int s,int val,long long sta)
{int j,s1=0;
 
 sta&=(1LL<<n)-(1LL<<(i-1));
 s1=calc(sta);
 if(s+s1<lim) return;
 while(i<=n && !(sta&(1LL<<(i-1)))) i++;
 if(i==n+1 || sta==0)
 {	if(s>=lim) ans=max(ans,val);
 	//cout<<i<<" "<<s<<" "<<val<<endl;
 	return;
 }
 s1=0;
 for(j=i;j<=n;j++) 
 	if(sta&(1LL<<(j-1)))
 		s1+=a[j];
 if(ans!=-1 && val+s1<=ans) return;
 dfs(i+1,s+1,val+a[i],sta&g[i]);
 dfs(i+1,s,val,sta);
}

class MagicMolecule
{
	public:
	int maxMagicPower(vector <int> magicPower, vector <string> magicBond)
	{	int i,j;
		long long s;
	
		n=magicPower.size();
		for(i=1;i<=n;i++) a[i]=magicPower[i-1];
		memset(g,0,sizeof(g));
		for(i=1;i<=n;i++)
		{	f[i].num=i;
			f[i].val=a[i];
			for(j=1;j<=n;j++)
				if(magicBond[i-1][j-1]=='Y')
				{	g[i]|=(1LL<<(j-1));
					f[i].d++;
				}
		}
		sort(f+1,f+n+1);
		for(i=1;i<=n;i++) id[f[i].num]=i;
		memset(g,0,sizeof(g));
		for(i=1;i<=n;i++) a[i]=f[i].val;
		for(i=1;i<=n;i++)
			for(j=1;j<=n;j++)
				if(magicBond[i-1][j-1]=='Y')
					g[id[i]]|=(1LL<<(id[j]-1));
		for(i=n;i>=1;i--) b[i]=max(a[i],b[i+1]);			
		ans=-1;
		lim=(n*2-1)/3+1;
		dfs(1,0,0,(1LL<<n)-1);
		return ans;
	}
	
// BEGIN CUT HERE
	public:
	void run_test(int Case) { if ((Case == -1) || (Case == 0)) test_case_0(); if ((Case == -1) || (Case == 1)) test_case_1(); if ((Case == -1) || (Case == 2)) test_case_2(); if ((Case == -1) || (Case == 3)) test_case_3(); }
	private:
	template <typename T> string print_array(const vector<T> &V) { ostringstream os; os << "{ "; for (typename vector<T>::const_iterator iter = V.begin(); iter != V.end(); ++iter) os << '\"' << *iter << "\","; os << " }"; return os.str(); }
	void verify_case(int Case, const int &Expected, const int &Received) { cerr << "Test Case #" << Case << "..."; if (Expected == Received) cerr << "PASSED" << endl; else { cerr << "FAILED" << endl; cerr << "\tExpected: \"" << Expected << '\"' << endl; cerr << "\tReceived: \"" << Received << '\"' << endl; } }
	void test_case_0() { int Arr0[] = {2533, 5647, 9685, 6195, 8102, 375, 3691, 1844, 6696, 5280, 6672, 9912, 6539, 8667, 2865, 625, 9767, 6705, 1968, 5583, 5102, 5036, 4178}; vector <int> Arg0(Arr0, Arr0 + (sizeof(Arr0) / sizeof(Arr0[0]))); string Arr1[] = {"NYYYYYYYYYNYYYYYYYYYYYY", "YNYYYYYYYYYYYYYYYYYYYYY", "YYNYYYYYYNYYYYYYYYYYYYY", "YYYNYYYYYYYYYNYYYYYYYYY", "YYYYNYYNYYYYYNYYYYYYYYY", "YYYYYNYYYYYYYYYYYYYYYYY", "YYYYYYNYYYYYYYYYYYYYYYY", "YYYYNYYNYYNYYYNYYYYYYYY", "YYYYYYYYNYYYYYYYYYYYYYY", "YYNYYYYYYNYYYYYYYYYYYYY", "NYYYYYYNYYNYYYYYYYYYYYY", "YYYYYYYYYYYNYYYYYYYYYYY", "YYYYYYYYYYYYNYYYYYYYYYY", "YYYNNYYYYYYYYNYYYYYYYYY", "YYYYYYYNYYYYYYNYYYYNYYY", "YYYYYYYYYYYYYYYNYYYYNYY", "YYYYYYYYYYYYYYYYNYYYYYY", "YYYYYYYYYYYYYYYYYNYYYYY", "YYYYYYYYYYYYYYYYYYNYYYY", "YYYYYYYYYYYYYYNYYYYNYYY", "YYYYYYYYYYYYYYYNYYYYNYY", "YYYYYYYYYYYYYYYYYYYYYNY", "YYYYYYYYYYYYYYYYYYYYYYN"}; vector <string> Arg1(Arr1, Arr1 + (sizeof(Arr1) / sizeof(Arr1[0]))); int Arg2 = 101853; verify_case(0, Arg2, maxMagicPower(Arg0, Arg1)); }
	void test_case_1() { int Arr0[] = {1, 7, 13, 15, 17, 24, 25, 32, 38, 39, 45, 48, 52, 53, 60, 68, 71, 72, 76, 86, 89, 89, 92, 93, 97, 105, 120, 125, 126, 132, 133, 138, 142, 144, 149, 149, 154, 156, 163, 164, 170, 172, 175, 210, 212, 214, 214, 216, 217, 219}; vector <int> Arg0(Arr0, Arr0 + (sizeof(Arr0) / sizeof(Arr0[0]))); string Arr1[] = {}; vector <string> Arg1(Arr1, Arr1 + (sizeof(Arr1) / sizeof(Arr1[0]))); int Arg2 = 4187; verify_case(1, Arg2, maxMagicPower(Arg0, Arg1)); }
	void test_case_2() { int Arr0[] = {86,15,100,93,53,50}; vector <int> Arg0(Arr0, Arr0 + (sizeof(Arr0) / sizeof(Arr0[0]))); string Arr1[] = {"NYYYYN","YNNNNY","YNNYYN","YNYNYN","YNYYNY","NYNNYN"}; vector <string> Arg1(Arr1, Arr1 + (sizeof(Arr1) / sizeof(Arr1[0]))); int Arg2 = 332; verify_case(2, Arg2, maxMagicPower(Arg0, Arg1)); }
	void test_case_3() { int Arr0[] = {3969,9430,7242,8549,8190,8368,3704,9740,1691}; vector <int> Arg0(Arr0, Arr0 + (sizeof(Arr0) / sizeof(Arr0[0]))); string Arr1[] = {"NYYYYYYYY","YNYYYYYYY","YYNYYYYYY","YYYNYYYYY","YYYYNYYYY","YYYYYNYYY","YYYYYYNNY","YYYYYYNNY","YYYYYYYYN"}; vector <string> Arg1(Arr1, Arr1 + (sizeof(Arr1) / sizeof(Arr1[0]))); int Arg2 = 57179; verify_case(3, Arg2, maxMagicPower(Arg0, Arg1)); }

// END CUT HERE

};

// BEGIN CUT HERE
int main()
{MagicMolecule ___test;
 ___test.run_test(-1);
 return 0;
}
// END CUT HERE
