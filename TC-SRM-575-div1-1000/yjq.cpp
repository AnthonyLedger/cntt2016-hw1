#include<bits/stdc++.h>
using namespace std;const int MAXN=6000;const int dx[4][2]={{1,0},{0,1},{-1,0},{0,-1}};class TheTilesDivOne{public:struct node{int to,next,flow;node(int a=0,int b=0,int c=0):to(a),next(b),flow(c){}}e[MAXN*5];int fn[MAXN],d[MAXN],ord[60][60],cnt,s,t,tot;void addedge(int u,int v,int f){e[++tot]=node(v,fn[u],f),fn[u]=tot;e[++tot]=node(u,fn[v],0),fn[v]=tot;}int level(int x,int y){if((x+y)&1)return(y&1)*2;return 1;}int dfs(int now,int flow){if(now==t)return flow;int use=0;for(int i=fn[now];i;i=e[i].next)if(e[i].flow>0&&d[e[i].to]+1==d[now]){int tmp=dfs(e[i].to,min(e[i].flow,flow-use));e[i].flow-=tmp,e[i^1].flow+=tmp,use+=tmp;if(use==flow)return use;}++d[now];return use;}int find(vector<string>board){tot=1;int n=board.size(),m=board[0].length();for(int i=0;i<n;i++)for(int j=0;j<m;j++)ord[i][j]=++cnt;s=0,t=cnt*2+1;for(int i=0;i<n;i++)for(int j=0;j<m;j++){if(board[i][j]=='.')addedge(ord[i][j],ord[i][j]+cnt,1);if(level(i,j)==2)addedge(ord[i][j]+cnt,t,1);if(level(i,j)==0)addedge(s,ord[i][j],1);for(int dir=0;dir<4;dir++){int x=i+dx[dir][0],y=j+dx[dir][1];if(x>=0&&y>=0&&x<n&&y<m&&level(i,j)+1==level(x,y))addedge(ord[i][j]+cnt,ord[x][y],1);}}int tmp=0;for(;d[s]<t+1;tmp+=dfs(s,1<<30));return tmp;}};