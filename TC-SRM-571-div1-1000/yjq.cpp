#include<bits/stdc++.h>
using namespace std;int n;const int MAXN=60;const double eps=1e-9;double low[MAXN],hig[MAXN];queue<int>q;class CandyOnDisk{public:double Dist(int ax,int ay,int bx,int by){return sqrt(1.0*(ax-bx)*(ax-bx)+1.0*(ay-by)*(ay-by));}string ableToAchieve(vector<int>x,vector<int>y,vector<int>r,int sx,int sy,int tx,int ty){if(sx==tx&&sy==ty)return"YES";n=r.size();for(int i=0;i<n;i++)low[i]=1.0e10,hig[i]=-1.0;bool vis[50]={0};for(int i=0;i<n;i++){double d=Dist(sx,sy,x[i],y[i]);if(d<=r[i]){low[i]=hig[i]=d;q.push(i);vis[i]=true;}}while(!q.empty()){int cur=q.front();q.pop();for(int i=0;i<n;i++){double d=Dist(x[cur],y[cur],x[i],y[i]);if(d>hig[cur]+r[i])continue;if(low[cur]>d+r[i]||r[cur]<d-r[i])continue;double lo=max(d-r[cur],0.0),hi=min(d+r[cur],1.0*r[i]);if(x[cur]==x[i]&&y[cur]==y[i])lo=low[cur],hi=min(hig[cur],1.0*r[i]);if(lo>hi)continue;if(lo<=low[i]-eps||hi>=hig[i]+eps){low[i]=min(low[i],lo),hig[i]=max(hig[i],hi);if(!vis[i])q.push(i),vis[i]=true;}}vis[cur]=false;}for(int i=0;i<n;i++){double d=Dist(tx,ty,x[i],y[i]);if(low[i]==hig[i]){if(abs(sx-x[i])==abs(tx-x[i])&&abs(sy-y[i])==abs(ty-y[i]))return"YES";}else if(d>=low[i]&&d<=hig[i])return"YES";}return"NO";}};
