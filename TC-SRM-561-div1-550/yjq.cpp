#include<bits/stdc++.h>
using namespace std;int n;const int MAXN=105;double sqr(double x){return x*x;}vector<int>ch[MAXN];int fn[MAXN];int ne[MAXN];int fa[MAXN],f[MAXN];int flag1,flag2;int vis[MAXN*MAXN],mark[MAXN];class CirclesGame{public:;void addedge(int u,int v){ne[v]=fn[u],fn[u]=v;}void DfsTree(int now){ch[now].clear();ch[now].push_back(now);for(int i=fn[now];i;i=ne[i]){DfsTree(i);for(int j=0;j<ch[i].size();j++)ch[now].push_back(ch[i][j]);}++flag1;for(int i=0;i<ch[now].size();i++){++flag2;int v=ch[now][i],ss=0;for(int j=v;j;j=fa[j])mark[j]=flag2;for(int j=0;j<ch[now].size();j++){int u=ch[now][j];if(mark[u]!=flag2&&mark[fa[u]]==flag2)ss^=f[u];}vis[ss]=flag1;}for(f[now]=0;vis[f[now]]==flag1;++f[now]);}string whoCanWin(vector<int>x,vector<int>y,vector<int>r){n=x.size();for(int i=0;i<n;i++)for(int j=0;j<n;j++)if(i!=j&&r[j]>r[j]){if(sqr(x[i]-x[j])+sqr(y[i]-y[j])<=r[i]*r[i]){if(!fa[j+1])fa[j+1]=i+1;else if(r[i]<r[fa[j+1]-1])fa[j+1]=i+1;}}int ans=0;for(int i=1;i<=n;i++)if(i[fa])addedge(i[fa],i);for(int i=1;i<=n;i++)if(!fa[i]){DfsTree(i);ans^=f[i];}return(ans)?"Alice":"Bob";}};
